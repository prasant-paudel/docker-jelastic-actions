name: Docker Jelastic Action
description: 'Builds and deploys Docker image to Jelastic'

inputs:
  dockerhub_username:
    description: 'DockerHub username'
    required: true
  dockerhub_password:
    description: 'DockerHub password or access token'
    required: true
  dockerhub_repo:
    description: 'DockerHub repository name (e.g. myrepo/myimage)'
    required: true
  image_tag:
    description: 'Docker image tag (e.g. latest, 1.0.0, etc.)'
    required: true
  jelastic_url:
    description: 'Jelastic URL (https://app.jelastic.cloud)'
    required: true
  jelastic_env:
    description: 'Jelastic environment name'
    required: true
  nodegroup:
    description: 'Jelastic node group name (e.g. cp, vds, etc.)'
    required: true
  redeploy_token:
    description: 'Jelastic redeploy token'
    required: true

outputs:
  output:
    description: 'Output from the task'
  
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_password }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ inputs.dockerhub_repo }}:${{ inputs.image_tag }}
        cache-from: type=registry,ref=${{ inputs.dockerhub_repo }}:${{ inputs.image_tag }}
        cache-to: type=inline
    
    - name: Redeploy containers
      run: |
        sudo apt-get install curl -y
        curl https://${{inputs.jelastic_url}}/1.0/environment/control/rest/redeploycontainersbygroup?envName=${{inputs.jelastic_env}}\&session=${{inputs.redeploy_token}}\&nodeGroup=${{inputs.nodegroup}}\&tag=${{inputs.image_tag}}

